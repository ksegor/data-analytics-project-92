age_groups
SELECT
"age_category,"
COUNT(*) AS count
FROM (
SELECT
CASE
WHEN age BETWEEN 16 AND 25 THEN '16-25'
WHEN age BETWEEN 26 AND 40 THEN '26-40'
ELSE '40+'
END AS age_category
FROM
customers
) AS age_groups
GROUP BY
age_category
ORDER BY
CASE
WHEN age_category = '16-25' THEN 1
WHEN age_category = '26-40' THEN 2
ELSE 3
END;
счтает количество людей в 3-х возрастных категориях.

customers_by_month
with tab as(
select
"c.customer_id,"
"s.sale_date,"
"p.price,"
s.quantity
from customers c
join sales s on
c.customer_id = s.customer_id
join products p on
s.product_id = p.product_id
)
select
"to_char(sale_date, 'YYYY-MM') as selling_month,"
"count (distinct customer_id) as total_customers,"
sum(price * quantity) as income
from tab
group by sale_date
order by sale_date;

считает количевот ункальных покупателей и выручку которую они принесли. трансформирует в год и месяц групирует и сорирует по дате

special_offer
with tab as (
select
"c.customer_id,"
"concat(c.first_name, ' ', c.last_name) as customer,"
"MIN(s.sale_date) as sale_date,"
"concat(e.first_name, ' ', e.last_name) as seller"
from customers c
join sales s on
c.customer_id = s.customer_id
join employees e on
s.sales_person_id = e.employee_id
join products p on
s.product_id = p.product_id
where p.price = 0
"group by c.first_name, c.customer_id, c.last_name, e.first_name, e.last_name"
order by sale_date
)
select
"customer,"
"sale_date,"
seller
from tab
where sale_date in (
select min(sale_date)
from sales s group by customer_id
)
order by customer;

выводит покупателей которые сделали перкую покупку во время акции.