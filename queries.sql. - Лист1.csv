top_10_total_income,lowest_average_income,day_of_the_week_income
"select concat(e.first_name, '', e.last_name) as seller,",with average_income as (,SELECT
"count(s.sales_id) as operations,","select sales_person_id,","concat(e.first_name, ' ', e.last_name) AS seller,"
sum(s.quantity * p.price) as income,floor(sum(quantity * price)/ count(sales_id)) as avg_income,"to_char(sale_date, 'Day') AS day_of_week,"
from sales s,from sales s,floor(sum(p.price * s.quantity)) AS income
join employees e on,join products p on,FROM
s.sales_person_id = e.employee_id,s.product_id = p.product_id,sales s
join products p on,group by sales_person_id,JOIN
s.product_id = p.product_id,"),",employees e ON s.sales_person_id = e.employee_id
group by e.employee_id,overall_average as (,JOIN
order by income desc,select floor(avg(avg_income)) as overall_avg,customers c ON s.customer_id = c.customer_id
limit 10;,from average_income,JOIN
,),products p ON s.product_id = p.product_id
"запрос объединяет имя и фамилию, считает количество проведенных сделок, выручку за все время, объединяет таблицы emp, prod, сортирует в порядке убывания и выводит 10 с набольшей выручкой и количество сделок.","select concat(e.first_name,'', e.last_name) as seller,",GROUP BY
,ai.avg_income as average_income,"e.employee_id, sale_date"
,from average_income ai,ORDER BY
,join employees e on,"extract(dow from sale_date), e.last_name, e.first_name;"
,ai.sales_person_id = e.employee_id,
,where,"запрос получает день недели в формате строки, считает общую выручку от продаж и округляет до целого, полуает сумму выручки для каждого продавца в каждый день, сортирует по порядковому номеру дня недели."
,ai.avg_income < (select overall_avg from overall_average),
,order by average_income asc;,
,,
,"запрос считает чья средняя выручка за сделку меньше средней выручки за сделку по всем продавцам. округляет выручку до целого числа, сортирует по возрастанию",
,,
,,
,,
,,
,,
,,products p ON s.product_id = p.product_id
,,GROUP BY
,,"e.employee_id, sale_date"
,,ORDER BY
,,"extract(dow from sale_date), e.last_name, e.first_name;"